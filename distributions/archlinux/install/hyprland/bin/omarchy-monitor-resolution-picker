#!/bin/bash

# Improved script to change a monitor's resolution and scale under Hyprland.
# Uses fzf for interactive selection and gum only for final confirmation.

set -euo pipefail

# -- Dependency check --
check_deps() {
  for cmd in hyprctl jq fzf gum; do
    if ! command -v "$cmd" &> /dev/null; then
      echo "Error: command '$cmd' not found." >&2
      echo "Please install it to use this script." >&2
      exit 1
    fi
  done
}

# Main function
main() {
  # -- Step 1: get all monitors info (single call) --
  monitors_json=$(hyprctl monitors -j)

  if [[ -z "$monitors_json" || "$monitors_json" == "[]" ]]; then
    echo "No monitors detected by Hyprland." >&2
    exit 1
  fi

  # -- Step 2: select a monitor --
  # Format for fzf: Name<TAB>Resolution@Refresh<TAB>(current in italic if focused)
  monitor_list=$(echo "$monitors_json" | jq -r '.[] |
    (.name) + "\t" +
    (if .focused
      then "\u001b[3m\(.width)x\(.height)@\(.refreshRate | floor)Hz\u001b[0m"
      else        "\(.width)x\(.height)@\(.refreshRate | floor)Hz"
     end) + "\t" +
    (if .focused then "\u001b[3m(current)\u001b[0m" else "" end)')

  # Display only; do not pre-filter the list
  focused_monitor=$(echo "$monitors_json" | jq -r '.[] | select(.focused) | .name')

  selected_monitor_line=$(echo -e "$monitor_list" | fzf --ansi --prompt="📺 Which monitor to configure? " --height="25%" --border=rounded --with-nth=1,2)

  # Exit if user presses Esc
  if [[ -z "$selected_monitor_line" ]]; then
    echo "No selection. Operation cancelled."
    exit 0
  fi

  monitor_name=$(echo "$selected_monitor_line" | cut -f1)

  # isolate selected monitor details
  monitor_details=$(echo "$monitors_json" | jq --arg MON "$monitor_name" '.[] | select(.name == $MON)')

  echo "Selected monitor: $monitor_name"
  echo

  # -- Step 3: select a resolution --
  available_modes=$(echo "$monitor_details" | jq -r '.availableModes[]')
  current_mode=$(echo "$monitor_details" | jq -r '"\(.width)x\(.height)@\(.refreshRate | floor)Hz"')

  # mark current mode in italic
  available_modes_ansi=$(
    while IFS= read -r line; do
      token="${line%% *}"
      token_int=$(echo "$token" | sed -E 's/@([0-9]+)\.[0-9]+Hz/@\1Hz/')
      if [[ "$token_int" == "$current_mode" ]]; then
        printf "\e[3m%s\e[0m\n" "$line"
      else
        printf "%s\n" "$line"
      fi
    done <<< "$available_modes"
  )

  chosen_mode_raw=$(echo "$available_modes_ansi" | fzf --ansi --prompt="📏 Which resolution? " --height="40%" --border=rounded)
  if [[ -z "$chosen_mode_raw" ]]; then
    echo "No selection. Operation cancelled."
    exit 0
  fi

  # strip ANSI sequences
  chosen_mode_raw=$(printf "%s" "$chosen_mode_raw" | sed -r 's/\x1B\[[0-9;]*[mK]//g')

  # keep only "WIDTHxHEIGHT@REFRESH"
  chosen_mode=$(echo "$chosen_mode_raw" | sed -E 's/@([0-9]+)\.[0-9]+Hz/@\1Hz/' | cut -d' ' -f1)

  # -- Step 4: select scale --
  scale_options=("1.00" "1.25" "1.5" "1.75" "2.00")
  current_scale=$(echo "$monitor_details" | jq -r '.scale')

  # mark current scale in italic
  scale_list=$(
    for s in "${scale_options[@]}"; do
      if [[ "$s" == "$current_scale" ]]; then
        printf "\e[3m%s\e[0m\n" "$s"
      else
        printf "%s\n" "$s"
      fi
    done
  )

  chosen_scale=$(echo "$scale_list" | fzf --ansi --prompt="🔎 Which scale to apply? " --height="25%" --border=rounded)
  if [[ -z "$chosen_scale" ]]; then
    echo "No selection. Operation cancelled."
    exit 0
  fi

  # strip ANSI sequences
  chosen_scale=$(printf "%s" "$chosen_scale" | sed -r 's/\x1B\[[0-9;]*[mK]//g')

  # -- Step 5: prepare and confirm the command --
  position=$(echo "$monitor_details" | jq -r '"\(.x)x\(.y)"')

  cmd="hyprctl keyword monitor \"$monitor_name,${chosen_mode},$position,$chosen_scale\""

  echo "Configuration to apply:"
  echo "  Monitor   : $monitor_name"
  echo "  Resolution: $chosen_mode"
  echo "  Position  : $position"
  echo "  Scale     : $chosen_scale"
  echo

  if gum confirm "Do you want to execute this command?" --affirmative="✅ Yes" --negative="❌ No"; then
    eval "$cmd"
    echo "✅ Configuration applied successfully!"
    echo
    # Show the exact line to add to Hyprland config to persist this setting
    echo "To make this setting persistent, add the following line to your Hyprland config (e.g. ~/.config/hypr/monitors.conf):"
    echo
    echo "monitor $monitor_name,$chosen_mode,$position,$chosen_scale"
fi
}

# --- Run ---
check_deps
main