#!/bin/bash

set -euo pipefail

menu() {
  local prompt="$1"
  local options="$2"
  local extra="$3"
  local preselect="$4"

  read -r -a args <<<"$extra"

  if [[ -n "$preselect" ]]; then
    local index
    index=$(echo -e "$options" | grep -nxF "$preselect" | cut -d: -f1)
    if [[ -n "$index" ]]; then
      args+=("-a" "$index")
    fi
  fi

  echo -e "$options" | walker --dmenu --theme dmenu_250 -p "$prompt…" "${args[@]}"
}

present_terminal() {
  alacritty --class Omarchy -e bash -c "$1"
}

main() {
  monitors_json=$(hyprctl monitors -j)

  if [[ -z "$monitors_json" || "$monitors_json" == "[]" ]]; then
    echo "No monitors detected by Hyprland." >&2
    exit 1
  fi

  monitor_count=$(echo "$monitors_json" | jq 'length')

  if (( monitor_count == 1 )); then
    # Only one monitor, no prompt
    monitor_name=$(echo "$monitors_json" | jq -r '.[0].name')
    monitor_details=$(echo "$monitors_json" | jq '.[0]')
  else
    # Multiple monitors → prompt
    monitor_list=$(echo "$monitors_json" | jq -r '.[] |
      .name + "\t" +
      (.width|tostring) + "x" + (.height|tostring) + "@" + ((.refreshRate|floor)|tostring) + "Hz" +
      (if .focused then " (current)" else "" end)')

    focused_monitor=$(echo "$monitors_json" | jq -r '.[] | select(.focused) | .name')

    selected_monitor_line=$(menu "Which monitor to configure" "$monitor_list" "" "$focused_monitor")
    if [[ -z "$selected_monitor_line" ]]; then
      echo "No selection. Operation cancelled."
      exit 0
    fi

    monitor_name=$(echo "$selected_monitor_line" | cut -f1)
    monitor_details=$(echo "$monitors_json" | jq --arg MON "$monitor_name" '.[] | select(.name == $MON)')
  fi

  # Step 3: resolution
  available_modes=$(echo "$monitor_details" | jq -r '.availableModes[]')
  current_mode=$(echo "$monitor_details" | jq -r '"\(.width)x\(.height)@\(.refreshRate | floor).00Hz"')

  chosen_mode_raw=$(menu "Which resolution" "$available_modes" "" "$current_mode")
  if [[ -z "$chosen_mode_raw" ]]; then
    echo "No selection. Operation cancelled."
    exit 0
  fi
  chosen_mode=$(echo "$chosen_mode_raw" | sed -E 's/@([0-9]+)\.[0-9]+Hz/@\1Hz/' | cut -d' ' -f1)

  # Step 4: scale
  scale_options="1.00\n1.25\n1.50\n1.75\n2.00"
  current_scale=$(echo "$monitor_details" | jq -r '.scale')

  chosen_scale=$(menu "Which scale to apply" "$scale_options" "" "$current_scale")
  if [[ -z "$chosen_scale" ]]; then
    echo "No selection. Operation cancelled."
    exit 0
  fi

  # Step 5: terminal script
  position=$(echo "$monitor_details" | jq -r '"\(.x)x\(.y)"')
  cmd="hyprctl keyword monitor \"$monitor_name,${chosen_mode},$position,$chosen_scale\""

  terminal_script=$(cat <<EOF
echo "Configuration to apply:"
echo "  Monitor   : $monitor_name"
echo "  Resolution: $chosen_mode"
echo "  Position  : $position"
echo "  Scale     : $chosen_scale"
echo

if gum confirm "Do you want to execute this command?" --affirmative="✅ Yes" --negative="❌ No"; then
  $cmd
  echo
  echo "✅ Configuration applied successfully!"
  echo
  echo "To make this setting persistent, add the following line to your Hyprland config:"
  echo "monitor=$monitor_name,$chosen_mode,$position,$chosen_scale"
else
  echo "❌ Operation cancelled."
fi

echo
omarchy-show-done
EOF
)

  present_terminal "$terminal_script"
}

main
